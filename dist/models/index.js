"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeleteConversation = exports.FcmToken = exports.DeleteMessage = exports.Notification = exports.PlanProduction = exports.Payroll = exports.EventChecks = exports.SafetyChecks = exports.Events = exports.Inventory = exports.Information = exports.Checkin = exports.Conversation = exports.GroupMember = exports.Message = exports.PaidLeaveRequest = exports.Trainning = exports.Product = exports.CodeError = exports.DailyReport = exports.Order = exports.Food = exports.Canteen = exports.Department = exports.User = void 0;
const user_model_1 = __importDefault(require("./user.model"));
exports.User = user_model_1.default;
const department_model_1 = __importDefault(require("./department.model"));
exports.Department = department_model_1.default;
const canteen_model_1 = __importDefault(require("./canteen.model"));
exports.Canteen = canteen_model_1.default;
const food_model_1 = __importDefault(require("./food.model"));
exports.Food = food_model_1.default;
const order_model_1 = __importDefault(require("./order.model"));
exports.Order = order_model_1.default;
const dailyReport_model_1 = __importDefault(require("./dailyReport.model"));
exports.DailyReport = dailyReport_model_1.default;
const codeError_model_1 = __importDefault(require("./codeError.model"));
exports.CodeError = codeError_model_1.default;
const product_model_1 = __importDefault(require("./product.model"));
exports.Product = product_model_1.default;
const trainning_model_1 = __importDefault(require("./trainning.model"));
exports.Trainning = trainning_model_1.default;
const paidLeaveRequest_model_1 = __importDefault(require("./paidLeaveRequest.model"));
exports.PaidLeaveRequest = paidLeaveRequest_model_1.default;
const message_model_1 = __importDefault(require("./message.model"));
exports.Message = message_model_1.default;
const conversation_model_1 = __importDefault(require("./conversation.model"));
exports.Conversation = conversation_model_1.default;
const groupMember_model_1 = __importDefault(require("./groupMember.model"));
exports.GroupMember = groupMember_model_1.default;
const checkin_model_1 = __importDefault(require("./checkin.model"));
exports.Checkin = checkin_model_1.default;
const information_model_1 = __importDefault(require("./information.model"));
exports.Information = information_model_1.default;
const inventory_model_1 = __importDefault(require("./inventory.model"));
exports.Inventory = inventory_model_1.default;
const events_model_1 = __importDefault(require("./events.model"));
exports.Events = events_model_1.default;
const safetyCheck_model_1 = __importDefault(require("./safetyCheck.model"));
exports.SafetyChecks = safetyCheck_model_1.default;
const eventCheck_model_1 = __importDefault(require("./eventCheck.model"));
exports.EventChecks = eventCheck_model_1.default;
const payrolls_model_1 = __importDefault(require("./payrolls.model"));
exports.Payroll = payrolls_model_1.default;
const planProductions_model_1 = __importDefault(require("./planProductions.model"));
exports.PlanProduction = planProductions_model_1.default;
const notification_model_1 = __importDefault(require("./notification.model"));
exports.Notification = notification_model_1.default;
const deleteMessage_model_1 = __importDefault(require("./deleteMessage.model"));
exports.DeleteMessage = deleteMessage_model_1.default;
const fcmToken_model_1 = __importDefault(require("./fcmToken.model"));
exports.FcmToken = fcmToken_model_1.default;
const deleteConversation_model_1 = __importDefault(require("./deleteConversation.model"));
exports.DeleteConversation = deleteConversation_model_1.default;
user_model_1.default.belongsTo(department_model_1.default, { foreignKey: 'department_id', as: 'department' });
department_model_1.default.hasMany(user_model_1.default, { foreignKey: 'department_id', as: 'users' });
order_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'user_id', as: 'user' });
user_model_1.default.hasMany(order_model_1.default, { foreignKey: 'user_id', as: 'order' });
codeError_model_1.default.belongsTo(dailyReport_model_1.default, { foreignKey: 'daily_report_id' });
dailyReport_model_1.default.hasMany(codeError_model_1.default, { foreignKey: 'daily_report_id' });
user_model_1.default.hasMany(dailyReport_model_1.default, { foreignKey: 'user_id' });
dailyReport_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'user_id' });
product_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'user_id' });
user_model_1.default.hasMany(product_model_1.default, { foreignKey: 'user_id' });
trainning_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'user_id' });
user_model_1.default.hasMany(trainning_model_1.default, { foreignKey: 'user_id' });
user_model_1.default.hasMany(paidLeaveRequest_model_1.default, { foreignKey: 'user_id' });
user_model_1.default.hasMany(paidLeaveRequest_model_1.default, { foreignKey: 'leader_id' });
user_model_1.default.hasMany(paidLeaveRequest_model_1.default, { foreignKey: 'admin_id' });
paidLeaveRequest_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'user_id', as: 'staff' });
paidLeaveRequest_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'leader_id', as: 'leader' });
paidLeaveRequest_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'admin_id', as: 'admin' });
message_model_1.default.belongsTo(conversation_model_1.default, { foreignKey: 'conversation_id' });
conversation_model_1.default.hasMany(message_model_1.default, { foreignKey: 'conversation_id' });
groupMember_model_1.default.belongsTo(conversation_model_1.default, { foreignKey: 'conversation_id' });
groupMember_model_1.default.belongsTo(user_model_1.default, {
    foreignKey: 'user_id',
    as: 'users',
});
user_model_1.default.hasMany(groupMember_model_1.default, { foreignKey: 'user_id' });
checkin_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'user_id' });
user_model_1.default.hasMany(checkin_model_1.default, { foreignKey: 'user_id' });
information_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'user_id' });
user_model_1.default.hasMany(information_model_1.default, { foreignKey: 'user_id' });
dailyReport_model_1.default.belongsTo(department_model_1.default, { foreignKey: 'department_id' });
department_model_1.default.hasMany(dailyReport_model_1.default, { foreignKey: 'department_id' });
inventory_model_1.default.belongsTo(department_model_1.default, { foreignKey: 'department_id' });
department_model_1.default.hasMany(inventory_model_1.default, { foreignKey: 'department_id' });
events_model_1.default.hasMany(safetyCheck_model_1.default, { foreignKey: 'event_id' });
safetyCheck_model_1.default.belongsTo(events_model_1.default, { foreignKey: 'event_id' });
events_model_1.default.hasMany(eventCheck_model_1.default, { foreignKey: 'event_id' });
eventCheck_model_1.default.belongsTo(events_model_1.default, { foreignKey: 'event_id' });
safetyCheck_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'user_id' });
user_model_1.default.hasMany(safetyCheck_model_1.default, { foreignKey: 'user_id' });
eventCheck_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'user_id' });
user_model_1.default.hasMany(eventCheck_model_1.default, { foreignKey: 'user_id' });
payrolls_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'user_id' });
user_model_1.default.hasMany(payrolls_model_1.default, { foreignKey: 'user_id' });
planProductions_model_1.default.belongsTo(department_model_1.default, { foreignKey: 'department_id' });
department_model_1.default.hasMany(planProductions_model_1.default, { foreignKey: 'department_id' });
notification_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'user_id' });
user_model_1.default.hasMany(notification_model_1.default, { foreignKey: 'user_id' });
message_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'user_id' });
user_model_1.default.hasMany(message_model_1.default, { foreignKey: 'user_id' });
deleteMessage_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'user_id' });
deleteMessage_model_1.default.belongsTo(message_model_1.default, { foreignKey: 'message_id' });
message_model_1.default.hasMany(deleteMessage_model_1.default, { foreignKey: 'message_id' });
user_model_1.default.hasMany(deleteMessage_model_1.default, { foreignKey: 'user_id' });
fcmToken_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'user_id' });
user_model_1.default.hasMany(fcmToken_model_1.default, { foreignKey: 'user_id' });
deleteConversation_model_1.default.belongsTo(user_model_1.default, { foreignKey: 'user_id' });
deleteConversation_model_1.default.belongsTo(conversation_model_1.default, { foreignKey: 'conversation_id' });
conversation_model_1.default.hasMany(deleteConversation_model_1.default, { foreignKey: 'conversation_id' });
user_model_1.default.hasMany(deleteConversation_model_1.default, { foreignKey: 'user_id' });
